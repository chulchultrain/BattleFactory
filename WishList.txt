I wish to make a list of all the pokemon in my battle-factory game
along with their stats, to see correlations in how to play against certain
teams, so I don't get lose unexpectedly, and to see if the game randomizes
the pokemon-moveset relationship or if these are predetermined. 
(AKA keep a list of pokemon and their moveset to see if I can beat the system)


For a program this small, I would want to do it in C.
This will serve as practice for mirroring Object-Oriented Programming in C.

Need a Table struct.

And for the Table, an Entry struct.





///////////////////////////////////////


Perhaps, I'll start with implementing the typing system, and do weaknesses/resistances/no effects.


Do I want the real stats for these pokemon? Or their base stats + EV's?


ADD FUNCTIONS TO MODIFY EXISTING ENTRY, STATS, TYPING object. For use with New Constructors. Initialize to 0 with NEW and set with these functions.

ADD FUNCTIONS TO DEALLOCATE MEMORY FOR ENTRY, STATS, TYPING.

ADD NULL POINTER CATCHES ON ALL MALLOCS

ADD FUNCTIONS POINTERS TO STRUCTS TO SIMULATE OBJECT-ORIENTED PROGRAMMING.

Add layers so top-level user only has to do PokemonEntry->SetHP or PokemonEntry->SetPrimaryType. Higher levels will ahve way more function poniters than lower levels



DAMAGE CALCULATOR
